generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Awner {
    id       Int    @id @default(autoincrement())
    email    String @unique
    password String
}

model Awner_info {
    id          Int    @id @default(autoincrement())
    name        String @unique @db.VarChar(30)
    email       String @unique @db.VarChar(40)
    description String @unique @db.VarChar(255)
    image       String @unique @db.VarChar(255)
}

model Links {
    id    Int    @id @default(autoincrement())
    title String @unique @db.VarChar(30)
    link  String @unique @db.VarChar(255)
    icon  String @db.VarChar(255)
    type  String @db.VarChar(40)
}

model phones {
    id    Int    @id @default(autoincrement())
    phone String @db.VarChar(30)
}

model job_titles {
    id    Int    @id @default(autoincrement())
    title String @db.VarChar(30)
}

model colors_setting {
    id         Int    @id @default(autoincrement())
    main_color String @unique @db.VarChar(20)
    color1     String @unique @db.VarChar(20)
    color2     String @unique @db.VarChar(20)
}

// (<) one to many

// Category_skills < Skills
model Category_skills {
    id            Int      @id @default(autoincrement())
    category_name String   @unique @db.VarChar(50)
    skills        Skills[]
}

model Skills {
    id          Int             @id @default(autoincrement())
    title       String          @db.VarChar(20)
    icon        String          @db.VarChar(255)
    category    Category_skills @relation(fields: [category_id], references: [id])
    category_id Int
}

// projects < project_nots
// category_projects < projects
// visitor < project_nots
// visitor < messages

model Category_projects {
    id            Int        @id @default(autoincrement())
    category_name String     @unique @db.VarChar(60)
    projects      Projects[]
}

model Projects {
    id                  Int               @id @default(autoincrement())
    title               String            @db.VarChar(30)
    description         String            @db.VarChar(255)
    live_url            String            @db.VarChar(255)
    repo_url            String            @db.VarChar(255)
    status              String            @db.VarChar(20)
    created_at          DateTime          @default(now())
    ended_at            String            @db.VarChar(30)
    attachment          String            @db.VarChar(255)
    category_project    Category_projects @relation(fields: [category_project_id], references: [id])
    category_project_id Int
    project_notes       Project_notes[]
}

model Project_notes {
    id         Int      @id @default(autoincrement())
    notes      String   @db.VarChar(255)
    react      String   @db.VarChar(10)
    projects   Projects @relation(fields: [project_id], references: [id])
    project_id Int
    vistor     Visitor  @relation(fields: [visitor_id], references: [id])
    visitor_id String
}

model Visitor {
    id            String          @id 
    name          String          @db.VarChar(30)
    email         String          @db.VarChar(40)
    image         String          @db.VarChar(255)
    login_by      String          @db.VarChar(20)
    project_notes Project_notes[]
    messages      Messages[]
}

model Messages {
    id        Int     @id @default(autoincrement())
    subject   String  @db.VarChar(70)
    message   String  @db.VarChar(255)
    visitor   Visitor @relation(fields: [visitor_id], references: [id])
    visitor_id String
}
